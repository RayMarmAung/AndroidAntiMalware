Imports System.IO
Imports System.Security.Cryptography
Module CryptoFile

    Private strFileToEncrypt As String
    Private strFiletoDecrypt As String
    Private strOutputEncrypt As String
    Private strOutputDecrypt As String
    Dim fsInput As FileStream
    Dim fsOuput As FileStream

    Public Enum CryptoFileAction
        ActionEncrypt = 1
        ActionDecrypt = 2
    End Enum
    Private Function CreateKey() As Byte()

        Dim strPassword As String = "TELEComTechAV"

        Dim chrData() As Char = strPassword.ToCharArray
        Dim intLength As Integer = chrData.GetUpperBound(0)
        Dim bytDataToHash(intLength) As Byte

        For i As Integer = 0 To chrData.GetUpperBound(0)
            bytDataToHash(i) = CByte(Asc(chrData(i)))
        Next

        Dim SHA512 As New SHA512Managed
        Dim bytResult As Byte() = SHA512.ComputeHash(bytDataToHash)
        Dim bytKey(31) As Byte

        For i As Integer = 0 To 31
            bytKey(i) = bytResult(i)
        Next

        Return bytKey
    End Function
    Private Function CreateIV() As Byte()

        Dim strPassword As String = "77813&&*!#"
        Dim chrData() As Char = strPassword.ToCharArray
        Dim intLength As Integer = chrData.GetUpperBound(0)
        Dim bytDataToHash(intLength) As Byte

        For i As Integer = 0 To chrData.GetUpperBound(0)
            bytDataToHash(i) = CByte(Asc(chrData(i)))
        Next

        Dim SHA512 As New SHA512Managed
        Dim bytResult As Byte() = SHA512.ComputeHash(bytDataToHash)
        Dim bytIV(15) As Byte

        For i As Integer = 32 To 47
            bytIV(i - 32) = bytResult(i)
        Next

        Return bytIV
    End Function
    Public Sub EncryptOrDecryptFile(strInputFile As String, strOutputFile As String, DirWay As CryptoFileAction)

        Try

            Dim bytKey() As Byte = CreateKey()
            Dim bytIV() As Byte = CreateIV()

            fsInput = New FileStream(strInputFile, FileMode.Open, FileAccess.Read)
            fsOuput = New FileStream(strOutputFile, FileMode.OpenOrCreate, FileAccess.Write)

            fsOuput.SetLength(0)

            Dim bytBuffer(4096) As Byte
            Dim lngByteProcessed As Long = 0
            Dim lngfileLength As Long = fsInput.Length
            Dim intBytesInCurrentBlock As Integer
            Dim csCryptoStream As CryptoStream = Nothing

            Dim cspRijndael As New RijndaelManaged

            Select Case DirWay
                Case CryptoFileAction.ActionEncrypt
                    csCryptoStream = New CryptoStream(fsOuput, cspRijndael.CreateEncryptor(bytKey, bytIV), CryptoStreamMode.Write)
                Case CryptoFileAction.ActionDecrypt
                    csCryptoStream = New CryptoStream(fsOuput, cspRijndael.CreateDecryptor(bytKey, bytIV), CryptoStreamMode.Write)
            End Select

            While lngByteProcessed < lngfileLength

                intBytesInCurrentBlock = fsInput.Read(bytBuffer, 0, 4096)
                csCryptoStream.Write(bytBuffer, 0, intBytesInCurrentBlock)
                lngByteProcessed = lngByteProcessed + CLng(intBytesInCurrentBlock)

            End While

            csCryptoStream.Close()
            fsInput.Close()
            fsOuput.Close()

        Catch ex As Exception

        End Try

    End Sub

End Module

