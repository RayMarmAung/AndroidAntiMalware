//********************************************************************************
//* Device.vb Developed by Ray Marm Aung (Ray -Electronics) for TELEComLib.dll   *
//********************************************************************************

using System.IO;
using System.Threading;

namespace Telecom.Android
{
    public partial class Device
    {

        #region "Fields"
        private Info _info;
        private GeneralInfo _general;
        private BusyBox _busybox;
        private FileSystem _filesystem;
        private SuperSU _su;
        private string _serialNumber;
        private DeviceState _state;
        private bool _hasroot = false;
        #endregion
       
        #region "Properties"
        public Info Info
        {
            get { return _info; }
        }
        public GeneralInfo GeneralInfo
        {
            get { return _general; }
        }
        public BusyBox BusyBox
        {
            get { return _busybox; }
        }
        public FileSystem FileSystem
        {
            get { return _filesystem; }
        }
        public SuperSU Su
        {
            get { return _su; }
        }
        public bool HasRoot
        {
            get
            {
                string dump = Adb.ExecuteAdbCommand(Adb.FormAdbShellCommand(this, false, "su","-v"));

                using (StringReader r = new StringReader(dump))
                {
                    string line = r.ReadLine();

                    if (line.Contains("not found") || line.Contains("permission denied"))
                    {
                        _hasroot = false;
                    }
                    else
                    {
                        _hasroot = true;
                    }
                }
                
                return _hasroot;
            }
        }
        public string SerialNumber
        {
            get { return _serialNumber; }
        }
       
        public DeviceState State
        {
            get { return _state; }
            set { _state = value; }
        }
        #endregion

        #region "Procedures"
        internal Device(string deviceSerial)
        {
            _serialNumber = deviceSerial;
            Update();
        }
        private DeviceState SetState()
        {

            string state = null;

            using (StringReader r = new StringReader(Adb.Devices()))
            {
                string line = null;

                while (!(r.Peek() == -1))
                {
                    line = r.ReadLine();

                    if (!(line == null))
                    {
                        if (line.Contains(_serialNumber))
                        {
                            state = line.Substring(line.IndexOf('\t') + 1);
                        }
                    }

                }
            }

            switch (state)
            {
                case "device":
                    return DeviceState.ONLINE;
                case "recovery":
                    return DeviceState.RECOVERY;
                case "sideload":
                    return DeviceState.SIDELOAD;
                case "unauthorized":
                    return DeviceState.UNAUTHORIZED;
                default:

                    return DeviceState.UNKNOWN;
            }

        }

        public void Update()
        {
            _state = SetState();


            if (_state == DeviceState.ONLINE)
            {
                _info = new Info(this);
                _su = new SuperSU(this);
                _busybox = new BusyBox(this);
                _general = new GeneralInfo(this);
                _filesystem = new FileSystem(this);
               
            }

        }

        #endregion

    }

}
